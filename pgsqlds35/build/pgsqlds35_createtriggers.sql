-- Triggers

\c ds3;







CREATE OR REPLACE FUNCTION RESTOCK_ORDER10()
RETURNS TRIGGER
LANGUAGE plpgsql
AS $RESTOCK_ORDER$
DECLARE
  restockto INTEGER;
BEGIN
  IF ( NEW.QUAN_IN_STOCK < 3) THEN
    restockto = 250;
    IF ( ( NEW.PROD_ID +1) % 10000 = 0 ) THEN
      restockto = 2500;
    END IF;
    INSERT INTO REORDER10 ( PROD_ID, DATE_LOW, QUAN_LOW)
    VALUES ( NEW.PROD_ID, current_timestamp , restockto - NEW.QUAN_IN_STOCK);
    NEW.QUAN_IN_STOCK = restockto;
    -- UPDATE INVENTORY10 SET QUAN_IN_STOCK = OLD.QUAN_IN_STOCK WHERE PROD_ID = NEW.PROD_ID;
  END IF;
RETURN NEW;
END;
$RESTOCK_ORDER$;

CREATE TRIGGER RESTOCK10 BEFORE UPDATE ON INVENTORY10
FOR EACH ROW
WHEN (OLD.QUAN_IN_STOCK IS DISTINCT FROM NEW.QUAN_IN_STOCK )
EXECUTE PROCEDURE  RESTOCK_ORDER10();



